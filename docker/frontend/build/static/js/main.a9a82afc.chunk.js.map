{"version":3,"sources":["App.js","index.js"],"names":["App","useState","boxes","setBoxes","base_url","setBase_url","form_url","setForm_url","url","fetchData","fetch","response","ok","Error","json","useEffect","then","res","mappedBoxes","JSON","parse","map","box","coord","xmin","ymin","xmax","ymax","label","name","catch","e","console","log","message","params","image","options","colors","normal","selected","unselected","style","maxWidth","maxHeight","className","onSubmit","preventDefault","for","type","id","required","onChange","target","value","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+MAIe,SAASA,IACtB,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAAgCF,mBAAS,0EAAyE,mBAA3GG,EAAQ,KAAEC,EAAW,KAC5B,EAAgCJ,mBAAS,IAAG,mBAArCK,EAAQ,KAAEC,EAAW,KAExBC,EAAM,8BAAgCJ,EAIpCK,EAAS,iDAAG,8GACOC,MAAMF,GAAI,OAAnB,IAARG,EAAQ,QACAC,GAAG,CAAD,qBACR,IAAIC,MAAM,6BAA4B,gCAErCF,EAASG,QAAM,2CAEzB,kBAPc,mCASfC,qBAAU,WACRN,IACGO,MAAK,SAACC,GAEL,IAAMC,EAAcC,KAAKC,MAAMH,GAAKI,KAAI,SAAAC,GAAG,MAAK,CAC5CC,MAAO,CAACD,EAAIE,KAAMF,EAAIG,KAAMH,EAAII,KAAOJ,EAAIE,KAAMF,EAAIK,KAAOL,EAAIG,MAChEG,MAAON,EAAIO,KACd,IACD1B,EAASe,EACX,IACCY,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAEG,QAChB,GACJ,GAAG,IAEH,IAAMC,EAAS,CACbC,MAAOhC,EAQPiC,QAAS,CACPC,OAAQ,CACNC,OAAQ,sBACRC,SAAU,oBACVC,WAAY,uBAEdC,MAAO,CACLC,SAAU,OACVC,UAAW,UAUjB,OACE,sBAAKC,UAAU,MAAK,UAClB,6BAAI,mBAWJ,uBAAMC,SACJ,SAACf,GAAO1B,EAAYC,GAAWyB,EAAEgB,gBAAiB,EACnD,UACC,uBAAOC,IAAI,MAAK,SAAC,aAGjB,uBAAOC,KAAK,OAAOpB,KAAK,MAAMqB,GAAG,MAAMC,UAAQ,EAC/CC,SAAU,SAAArB,GAAC,OAAIxB,EAAYwB,EAAEsB,OAAOC,MAAM,IAE1C,uBAAOL,KAAK,SAASK,MAAM,cAE7B,+BAAI,sBAAoBlD,KACxB,cAAC,IAAW,CACVgC,MAAOD,EAAOC,MACdlC,MAAOA,EACPmC,QAASF,EAAOE,YAIxB,CC3FA,IAAMkB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAU,UACT,cAAC3D,EAAG,MAENuD,E","file":"static/js/main.a9a82afc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport Boundingbox from \"react-bounding-box\";\n\nexport default function App() {\n  const [boxes, setBoxes] = useState([]);\n  const [base_url, setBase_url] = useState('https://www.ishn.com/ext/resources/hi-vis-supply-construction-site.jpg')\n  const [form_url, setForm_url] = useState('')\n  // var base_url = 'https://www.ishn.com/ext/resources/hi-vis-supply-construction-site.jpg'\n  var url = 'http://localhost:8000/?url=' + base_url\n  // response is xmin,ymin,xmax,ymax,confidence,class,name\n\n\n  const fetchData = async () => {\n    const response = await fetch(url)\n    if (!response.ok) {\n      throw new Error('Data coud not be fetched!')\n    } else {\n      return response.json()\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n      .then((res) => {\n        // JSON.parse(res) is used in place of `res` since the returned val from the api is a str\n        const mappedBoxes = JSON.parse(res).map(box => ({\n            coord: [box.xmin, box.ymin, box.xmax - box.xmin, box.ymax - box.ymin],\n            label: box.name\n        }));\n        setBoxes(mappedBoxes)\n      })\n      .catch((e) => {\n        console.log(e.message)\n      })\n  }, [])\n\n  const params = {\n    image: base_url,\n    // boxes: [\n    //   // coord(0,0) = top left corner of image\n    //   { coord: [300, 300, 350, 350], label: \"test\" },\n    //   { coord: [300, 0, 250, 250], label: \"A\" },\n    //   { coord: [700, 0, 300, 25], label: \"B\" },\n    //   { coord: [1100, 0, 25, 300], label: \"C\" }\n    // ],\n    options: {\n      colors: {\n        normal: \"rgba(255,225,255,1)\",\n        selected: \"rgba(0,225,204,1)\",\n        unselected: \"rgba(100,100,100,1)\"\n      },\n      style: {\n        maxWidth: \"100%\",\n        maxHeight: \"90vh\"\n      }\n      // showLabels: false\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(formData);\n    setBase_url(formData);\n  }\n  return (\n    <div className=\"App\">\n      <h1>Image labeller</h1>\n      {/* <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input type=\"text\"\n          value={this.state.value}\n          onChange={this.handleChange}\n          />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form> */}\n      <form onSubmit={\n        (e) => {setBase_url(form_url); e.preventDefault();}\n      }>\n        <label for=\"url\">\n          new url:\n        </label>\n        <input type=\"text\" name=\"url\" id=\"url\" required\n        onChange={e => setForm_url(e.target.value)}\n          ></input>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <h2>Currently viewing: {base_url}</h2>\n      <Boundingbox\n        image={params.image}\n        boxes={boxes}\n        options={params.options}\n      />\n    </div>\n  );\n}\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}